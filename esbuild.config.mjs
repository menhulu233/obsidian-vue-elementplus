import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import Vue from "@the_tree/esbuild-plugin-vue3";
import copy from "esbuild-plugin-copy";

const banner =
	`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = (process.argv[2] === "production");

const context = await esbuild.context({
		banner: {
			js: banner,
		},
		plugins: [
			Vue(),
			copy({
					resolveFrom: 'cwd',
					assets: [
						{
							from: 'manifest.json',
							to: '../ai-writer/manifest.json'
						},
						{
							from: 'versions.json',
							to: '../ai-writer/versions.json'
						},
					]
				}
			)
		],
		entryPoints: ["./src/main.ts"],
		bundle:
			true,
		external:
			[
				"obsidian",
				"electron",
				"@codemirror/autocomplete",
				"@codemirror/collab",
				"@codemirror/commands",
				"@codemirror/language",
				"@codemirror/lint",
				"@codemirror/search",
				"@codemirror/state",
				"@codemirror/view",
				"@lezer/common",
				"@lezer/highlight",
				"@lezer/lr",
				...builtins],
		format:
			"cjs",
		target:
			"es2018",
		logLevel:
			"info",
		sourcemap:
			prod ? false : "inline",
		treeShaking:
			true,
		outfile:
			"../ai-writer/main.js",
		minify:
		prod,
	})
;

const buildCss = await esbuild.context({
	entryPoints: ["./src/styles.css"],
	outfile: "../ai-writer/dist/styles.css",
	bundle: true,
	allowOverwrite: true,
	minify: false,
});

if (prod) {
	await context.rebuild();
	await buildCss.rebuild();
	process.exit(0);
} else {
	await context.watch();
}




